version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: omtransport-postgres
    environment:
      POSTGRES_DB: omdb
      POSTGRES_USER: omadmin
      POSTGRES_PASSWORD: ompass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U omadmin -d omdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    container_name: omtransport-backend
    environment:
      - PORT=4000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=omadmin
      - DB_PASSWORD=ompass
      - DB_NAME=omdb
      - NODE_ENV=production
      - SECRET_KEY=your_jwt_secret_key
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "npx sequelize-cli db:migrate && npx sequelize-cli db:seed:all && node dist/index.js"

  frontend:
    build:
      context: .
      dockerfile: deployment/frontend.Dockerfile
    container_name: omtransport-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=https://omtransport-dash.onrender.com
    depends_on:
      - backend

volumes:
  postgres_data: 